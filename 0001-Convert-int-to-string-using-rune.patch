From 3c599a95059c66bb18958c7f32bf7683c7f1d920 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Robert-Andr=C3=A9=20Mauchin?= <zebob.m@gmail.com>
Date: Fri, 31 Jul 2020 18:12:32 +0200
Subject: [PATCH] Convert int to string using rune()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

See https://github.com/golang/go/issues/32479

Fix #7706.

Signed-off-by: Robert-Andr√© Mauchin <zebob.m@gmail.com>
---
 tsdb/index/index_test.go | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/tsdb/index/index_test.go b/tsdb/index/index_test.go
index ab142e527..f07215d46 100644
--- a/tsdb/index/index_test.go
+++ b/tsdb/index/index_test.go
@@ -523,7 +523,7 @@ func TestSymbols(t *testing.T) {
 	buf.PutBE32int(100) // Number of symbols.
 	for i := 0; i < 100; i++ {
 		// i represents index in unicode characters table.
-		buf.PutUvarintStr(string(i)) // Symbol.
+		buf.PutUvarintStr(string(rune(i))) // Symbol.
 	}
 	checksum := crc32.Checksum(buf.Get()[symbolsStart+4:], castagnoliTable)
 	buf.PutBE32(checksum) // Check sum at the end.
@@ -537,23 +537,23 @@ func TestSymbols(t *testing.T) {
 	for i := 99; i >= 0; i-- {
 		s, err := s.Lookup(uint32(i))
 		testutil.Ok(t, err)
-		testutil.Equals(t, string(i), s)
+		testutil.Equals(t, string(rune(i)), s)
 	}
 	_, err = s.Lookup(100)
 	testutil.NotOk(t, err)
 
 	for i := 99; i >= 0; i-- {
-		r, err := s.ReverseLookup(string(i))
+		r, err := s.ReverseLookup(string(rune(i)))
 		testutil.Ok(t, err)
 		testutil.Equals(t, uint32(i), r)
 	}
-	_, err = s.ReverseLookup(string(100))
+	_, err = s.ReverseLookup(string(rune(100)))
 	testutil.NotOk(t, err)
 
 	iter := s.Iter()
 	i := 0
 	for iter.Next() {
-		testutil.Equals(t, string(i), iter.At())
+		testutil.Equals(t, string(rune(i)), iter.At())
 		i++
 	}
 	testutil.Ok(t, iter.Err())
-- 
2.26.2

